we want the equivalent of
s_transforms transforms[texture_count][blend_mode_count];


why doesn't hot reloading break textures??
	we probably don't want it to allocate tho

make a config.bat

we can leak shaders if they compile but dont link
	we need some flags of what to free/delete in the load shader func

we want shader errors in game. we need text rendering for this!!

need a good way to set window size


make a default framebuffer thingie
we need to give new framebuffers a transforms pointer?
handle do depth and do additive

test if adding texture and framebuffers in any order breaks things

why hot code reloading broken??
	is it because load_texture allocates? but it also frees in the same call, i dont think this is it

hot reloading shoudl break when we allocate something in the game layer and then reload

embed assets in exe
	we have to do shaders and fonts


This doesnt seem necessary
	blowfishfugu: some docs: "To use SDL2 audio, include it as #include <SDL2/SDL_mixer.h> and use -sUSE_SDL_MIXER=2. Format support is currently limited to OGG, WAV, MID, and MOD."


ANYTIME some weird nonsense shit happens on the web build, it's probably because we have a pointer to a stack variable and that just fucks things up
	with emscripten_set_main_loop bullshit. Don't ever use pointers to stack variables BEFORE calling that shit

test if embedding works for the web


SDL_AUDIO_ALLOW_FREQUENCY_CHANGE breaks sounds in the web build!


we could actually get it down to 1 file with a bunch of #ifdefs. but we still need 2 compilation units for hot reloading to work


way of specifying window size

Aruseus: have you tried SDL_GL_GetProcAddress?
	maybe we can ditch glew with this? fuck glew baseg


golf:
	mode (or map?) where each time someone gets in the whole, the hole teleports
	rcrnstn: A other target that sometimes jumps around that, if you land on it, makes everyone else do a random push
	better graphics 4head
	angle indicator thing
	why does pushx push you?? parsing bug?? investigate